package sec1;
//thread: 하나의 프로세스(작업)을 의미
public class ThreadEx1 {
	public static void main(String[] args) {
		//ThreadRunable(인터페이스)로 부터 상속받아 오버라이딩
		Thread th1 = new Thread(new ThreadWithRunable());
		th1.run();
		
		//Thread(클래스)로 부터 상속 받아 run 메소드 선언
		ThreadWithClass th2 = new ThreadWithClass();
		//반드시, Thread(클래스)로 부터 상속 받아 ThreadWithClass(클래스)에 run메소드로 기술해야함
		th2.run();	//thread start
	}
}

class ThreadWithClass extends Thread {
	public void run(){	//run메소드 생성
		for(int i=0;i<5;i++){
			System.out.println(this.getName());
			try {
				Thread.sleep(10);	//1000 ms = 1초 이므로 0.01초(빠른 속도를 지연)
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}

class ThreadWithRunable implements Runnable {
	// Runnable은 인터페이스이므로 반드시 오버라이딩하여 해당 메소드를 구현체로 기술
	@Override
	public void run() {
		for(int i=0;i<5;i++){
			//현재 실행 중인 thread의 이름 출력
			System.out.println(Thread.currentThread().getName());
			try {
				Thread.sleep(10);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}